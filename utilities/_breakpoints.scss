//
// Breakpoints
//
// **************************************************

$breakpoints: (
	xxsmall: 0,
	xsmall:  420px,
	small:   560px,
	medium:  768px,
	large:   1024px,
	xlarge:  1200px,
	xxlarge: 1440px
) !default;


//
// From
//

@mixin break-from( $query ) {
	$value: break-from( $query );

	@if $value != null {
		@media screen and ( min-width: $value ) { @content; }
	} @else {
		@content;
	}
}


//
// Until
//

@mixin break-until( $query ) {
	$value: break-until( $query );

	@if $value != -1 {
		@media screen and ( max-width: $value ) { @content; }
	} @else {
		@content;
	}
}


//
// Only
//

@mixin break-only( $query ) {
	$value: break-only( $query );

	@if nth( $value, 1 ) != null and nth( $value, 2 ) != null {
		@media screen and ( min-width: nth( $value, 1 ) ) and ( max-width: nth( $value, 2 ) ) { @content; }
	} @else if nth( $value, 1 ) == null {
		@media screen and ( max-width: $value ) { @content; }
	} @else if nth( $value, 2 ) == null {
		@media screen and ( min-width: $value ) { @content; }
	}
}


//
// Break Mixin
//

@mixin break( $value ) {
	$key: nth( $value, 1 );
	$query: if( length( $value ) > 2, unset-nth( $value, 1 ), nth( $value, 2) );
	$accepted: ( 'from', 'until', 'only' );

	@if index( $accepted, $key ) {
		@if $key == 'from' {
			@include break-from( $query ) {
				@content;
			}
		} @else if $key == 'until' {
			@include break-until( $query ) {
				@content;
			}
		} @else if $key == 'only' {
			@include break-only( $query ) {
				@content;
			}
		}
	}
}
